#!/usr/bin/env node

var fs = require('fs'),
	path = require('path'),
	cp = require('child_process'),
	event = new (require('events').EventEmitter)(),
	slab = require('./../vendor/slab/src/slab.js').slab,
	wrup = require('wrapup')(),
	jsp = require('uglify-js').parser,
	pro = require('uglify-js').uglify,
	less = require('less')

var args = process.argv.splice(1);
if (!args[1] || !fs.statSync(args[1]).isDirectory()) {
	console.log('Please specify a directory to put the built files')
	process.exit(1)
}

var cwd = process.cwd(),
	root = path.normalize(path.dirname(args[0])+'/..'),
	dest = path.resolve(args[1]),
	js = '', css = ''

console.log('Compiling Tinker JS')
console.log('> Building mootools')
cp.exec(root+'/vendor/mootools-core/build', function(error, stdout, stderr){
	js += stdout
	event.emit('js.mootools')
})

event.once('js.mootools', function(){
	console.log('> Adding third-party files')
	var files = [
			'/vendor/slab-loader/src/slab.load.js',
			'/vendor/CodeMirror/lib/codemirror.js',
			'/vendor/CodeMirror/mode/xml/xml.js',
			'/vendor/CodeMirror/mode/css/css.js',
			'/vendor/CodeMirror/mode/javascript/javascript.js'
		], file
	while (files.length) {
		file = files.shift()
		console.log('  - .'+(root+file).replace(cwd, ''))
		js += fs.readFileSync(root+file, 'utf8')
	}
	event.emit('js.files')
})

event.once('js.files', function(){
	console.log('> Compiling templates')
	var files = fs.readdirSync(root+'/src/tpl'), tpl = '', out = ''
	while (files.length) {
		tpl += fs.readFileSync(root+'/src/tpl/'+files.shift(), 'utf8')
	}

	out += '(function(){'+"\n"+
		slab.generate('templates', tpl)+"\n"+
		'slab.register(templates);'+"\n"+
		'})();'
	js += out
	event.emit('js.templates')
})

event.once('js.templates', function(){
	console.log('> Wrapping up application code')
	js += wrup.require(root+'/src/js/init.js').up();
	event.emit('js.wrup')
})

event.once('js.wrup', function(){
	console.log('> Uglifying source')
	var ast = jsp.parse(js)
	ast = pro.ast_mangle(ast)
	ast = pro.ast_squeeze(ast)
	js = pro.gen_code(ast)
	event.emit('js.minify')
})

event.once('js.minify', function(){
	console.log('=== Writing file: .'+(dest+'/tinker.min.js').replace(cwd, ''))
	fs.writeFileSync(dest+'/tinker.min.js', js, 'utf8')
	event.emit('js.done')
})

event.once('js.done', function(){
	console.log("\n"+'Compiling Tinker CSS')
	console.log('> Adding third-party files')
	var files = [
			'/vendor/normalize.css/normalize.css',
			'/vendor/CodeMirror/lib/codemirror.css'
		], file
	while (files.length) {
		file = files.shift()
		console.log('  - .'+(root+file).replace(cwd, ''))
		css += fs.readFileSync(root+file, 'utf8')
	}
	event.emit('css.files')
})

event.once('css.files', function(){
	console.log('> Parsing less files')
	var parser = new less.Parser({paths: [root+'/src/css']})
	var lessCss = fs.readFileSync(root+'/src/css/init.less', 'utf8')
	parser.parse(lessCss, function(err, tree){
		css += tree.toCSS({compress: true})
		event.emit('css.less')
	})
})

event.once('css.less', function(){
	console.log('=== Writing file: .'+(dest+'/tinker.css.js').replace(cwd, ''))
	fs.writeFileSync(dest+'/tinker.min.css', css, 'utf8')

	event.emit('css.done')
})

